(ns aoc-clj.2023.day23-test
  (:require [clojure.test :refer [deftest testing is]]
            [aoc-clj.utils.grid.vecgrid :as vg]
            [aoc-clj.2023.day23 :as t]))

(def d23-s01-raw
  ["#.#####################"
   "#.......#########...###"
   "#######.#########.#.###"
   "###.....#.>.>.###.#.###"
   "###v#####.#v#.###.#.###"
   "###.>...#.#.#.....#...#"
   "###v###.#.#.#########.#"
   "###...#.#.#.......#...#"
   "#####.#.#.#######.#.###"
   "#.....#.#.#.......#...#"
   "#.#####.#.#.#########v#"
   "#.#...#...#...###...>.#"
   "#.#.#v#######v###.###v#"
   "#...#.>.#...>.>.#.###.#"
   "#####v#.#.###v#.#.###.#"
   "#.....#...#...#.#.#...#"
   "#.#########.###.#.#.###"
   "#...###...#...#...#.###"
   "###.###.#.###v#####v###"
   "#...#...#.#.>.>.#.>.###"
   "#.###.###.#.###.#.#v###"
   "#.....###...###...#...#"
   "#####################.#"])

(def d23-s01
  (vg/->VecGrid2D
   [[\# \. \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \#]
    [\# \. \. \. \. \. \. \. \# \# \# \# \# \# \# \# \# \. \. \. \# \# \#]
    [\# \# \# \# \# \# \# \. \# \# \# \# \# \# \# \# \# \. \# \. \# \# \#]
    [\# \# \# \. \. \. \. \. \# \. \> \. \> \. \# \# \# \. \# \. \# \# \#]
    [\# \# \# \v \# \# \# \# \# \. \# \v \# \. \# \# \# \. \# \. \# \# \#]
    [\# \# \# \. \> \. \. \. \# \. \# \. \# \. \. \. \. \. \# \. \. \. \#]
    [\# \# \# \v \# \# \# \. \# \. \# \. \# \# \# \# \# \# \# \# \# \. \#]
    [\# \# \# \. \. \. \# \. \# \. \# \. \. \. \. \. \. \. \# \. \. \. \#]
    [\# \# \# \# \# \. \# \. \# \. \# \# \# \# \# \# \# \. \# \. \# \# \#]
    [\# \. \. \. \. \. \# \. \# \. \# \. \. \. \. \. \. \. \# \. \. \. \#]
    [\# \. \# \# \# \# \# \. \# \. \# \. \# \# \# \# \# \# \# \# \# \v \#]
    [\# \. \# \. \. \. \# \. \. \. \# \. \. \. \# \# \# \. \. \. \> \. \#]
    [\# \. \# \. \# \v \# \# \# \# \# \# \# \v \# \# \# \. \# \# \# \v \#]
    [\# \. \. \. \# \. \> \. \# \. \. \. \> \. \> \. \# \. \# \# \# \. \#]
    [\# \# \# \# \# \v \# \. \# \. \# \# \# \v \# \. \# \. \# \# \# \. \#]
    [\# \. \. \. \. \. \# \. \. \. \# \. \. \. \# \. \# \. \# \. \. \. \#]
    [\# \. \# \# \# \# \# \# \# \# \# \. \# \# \# \. \# \. \# \. \# \# \#]
    [\# \. \. \. \# \# \# \. \. \. \# \. \. \. \# \. \. \. \# \. \# \# \#]
    [\# \# \# \. \# \# \# \. \# \. \# \# \# \v \# \# \# \# \# \v \# \# \#]
    [\# \. \. \. \# \. \. \. \# \. \# \. \> \. \> \. \# \. \> \. \# \# \#]
    [\# \. \# \# \# \. \# \# \# \. \# \. \# \# \# \. \# \. \# \v \# \# \#]
    [\# \. \. \. \. \. \# \# \# \. \. \. \# \# \# \. \. \. \# \. \. \. \#]
    [\# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \# \. \#]]))

(deftest parse-test
  (testing "Correctly parses the input"
    (is (= d23-s01 (t/parse d23-s01-raw)))))

(deftest trace-maze-test
  (testing "Explores the maze and returns a map representation
            of a DAG representing the vertices"
    (is (= {[1 0] {[3 5] 15}
            [3 5] {[5 13] 22 [11 3] 22}
            [5 13] {[21 22] 53 [13 13] 12}
            [11 3] {[13 13] 24, [21 22] 45}
            [13 13] {[21 22] 33}}
           (t/trace-maze d23-s01 {:pos [1 0] :heading :n})))))